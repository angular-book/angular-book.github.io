"use strict";(self.webpackChunkangular_book_github_io=self.webpackChunkangular_book_github_io||[]).push([[8586],{3905:(e,n,t)=>{t.d(n,{Zo:()=>i,kt:()=>m});var r=t(7294);function s(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){s(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,s=function(e,n){if(null==e)return{};var t,r,s={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(s[t]=e[t]);return s}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(s[t]=e[t])}return s}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},i=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p="mdxType",g={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,s=e.mdxType,a=e.originalType,c=e.parentName,i=u(e,["components","mdxType","originalType","parentName"]),p=l(t),d=s,m=p["".concat(c,".").concat(d)]||p[d]||g[d]||a;return t?r.createElement(m,o(o({ref:n},i),{},{components:t})):r.createElement(m,o({ref:n},i))}));function m(e,n){var t=arguments,s=n&&n.mdxType;if("string"==typeof e||s){var a=t.length,o=new Array(a);o[0]=d;var u={};for(var c in n)hasOwnProperty.call(n,c)&&(u[c]=n[c]);u.originalType=e,u[p]="string"==typeof e?e:s,o[1]=u;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3277:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>g,frontMatter:()=>a,metadata:()=>u,toc:()=>l});var r=t(7462),s=(t(7294),t(3905));const a={},o="TypeScript Tagged Union Type",u={unversionedId:"Getting-Real/TypeScript/types-tagged",id:"Getting-Real/TypeScript/types-tagged",title:"TypeScript Tagged Union Type",description:"Extended Example",source:"@site/docs/03-Getting-Real/02-TypeScript/10-types-tagged.md",sourceDirName:"03-Getting-Real/02-TypeScript",slug:"/Getting-Real/TypeScript/types-tagged",permalink:"/docs/Getting-Real/TypeScript/types-tagged",draft:!1,tags:[],version:"current",sidebarPosition:10,frontMatter:{},sidebar:"realWorld",previous:{title:"Functional TypeScript",permalink:"/docs/Getting-Real/TypeScript/functional"},next:{title:"Extending Interfaces or Types",permalink:"/docs/Getting-Real/TypeScript/extending-types"}},c={},l=[{value:"Extended Example",id:"extended-example",level:2}],i={toc:l},p="wrapper";function g(e){let{components:n,...t}=e;return(0,s.kt)(p,(0,r.Z)({},i,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"typescript-tagged-union-type"},"TypeScript Tagged Union Type"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'type SuccessResult<T> = {\n  status: "OK";\n  value: T;\n};\n\ntype ErrorResult = {\n  status: "ERROR";\n  message?: string;\n};\n\nfunction isEven(x: number): SuccessResult<number> | ErrorResult {\n  if (x % 2 === 0) {\n    const result: SuccessResult<number> = {\n      status: "OK",\n      value: 2,\n    };\n    return result;\n  } else {\n    const result: ErrorResult = {\n      status: "ERROR",\n      message: "Not\xa0Even!",\n    };\n  }\n}\n\nconst r = isEven(2);\n\nif (r.status === "OK") {\n  console.log(`That\xa0is\xa0even\xa0${r.value}\xa0${r.value * 2}`);\n} else {\n  const msg = r.message ? r.message : "No\xa0Message\xa0Provided!";\n\n  console.log(`It\xa0is\xa0not\xa0even.\xa0Message\xa0${msg}`);\n}\n')),(0,s.kt)("h2",{id:"extended-example"},"Extended Example"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-ts"},'type SuccessResult<T> = {\n  status: "OK";\n\n  value: T;\n};\n\ntype ErrorResult = {\n  status: "ERROR";\n\n  message?: string;\n};\n\nfunction isEven(x: number): SuccessResult<number> | ErrorResult {\n  if (x % 2 === 0) {\n    const result: SuccessResult<number> = {\n      status: "OK",\n\n      value: 2,\n    };\n\n    return result;\n  } else {\n    const result: ErrorResult = {\n      status: "ERROR",\n\n      message: "Not\xa0Even!",\n    };\n  }\n}\n\nconst r = isEven(2);\n\nif (r.status === "OK") {\n  console.log(`That\xa0is\xa0even\xa0${r.value}\xa0${r.value * 2}`);\n} else {\n  const msg = r.message ? r.message : "No\xa0Message\xa0Provided!";\n\n  console.log(`It\xa0is\xa0not\xa0even.\xa0Message\xa0${msg}`);\n}\n\ninterface CountData {\n  current: number;\n\n  by: 1 | 3 | 5;\n}\n\nconst c: CountData = { current: 99, by: 3 };\n\nlocalStorage.setItem("count", JSON.stringify(c));\n\nfunction getCountData(): SuccessResult<CountData> | ErrorResult {\n  const stored = localStorage.getItem("count");\n\n  if (stored) {\n    let data: any;\n\n    try {\n      data = JSON.parse(stored);\n    } catch {\n      return {\n        status: "ERROR",\n\n        message: "Not\xa0valid\xa0JSON",\n      };\n    }\n\n    if (typeof data.by === "number" && typeof data.current === "number") {\n      return {\n        status: "OK",\n\n        value: data as CountData,\n      };\n    } else {\n      return {\n        status: "ERROR",\n\n        message: "Data\xa0not\xa0in\xa0correct\xa0format\xa0",\n      };\n    }\n  } else {\n    return {\n      status: "ERROR",\n\n      message: "No\xa0Data\xa0Stored",\n    };\n  }\n}\n\nconst countDataResult = getCountData();\n\nswitch (countDataResult.status) {\n  case "OK": {\n    console.log(countDataResult.value);\n\n    break;\n  }\n\n  case "ERROR": {\n    console.log(countDataResult.message);\n  }\n}\n')))}g.isMDXComponent=!0}}]);